---
- hosts: all
  gather_facts: yes
  become: yes
  tasks:

  # This allows you to define os specific variables
  # Facts can be collected using the following command
  # ansible -i .vagrant/provisioners/ansible/inventory/vagrant_ansible_inventory all -m setup -a 'gather_subset=!all' 
  - name: Gather os specific variables
    include_vars: "{{ item }}" 
    with_first_found:
    - "vars/{{ ansible_distribution_release | lower }}.yml"
    - "vars/{{ ansible_distribution_version | lower }}.yml"
    tags: 
      - set-vars

  - name: Update all packages to the latest version
    apt:
      state: latest
      update_cache: yes
    tags:
      - install-update

  - name: Install docker
    ansible.builtin.apt:
      pkg:
        - docker.io
      state: latest
      update_cache: yes
    tags:
      - install-docker

  - name: Enable docker on systemd
    ansible.builtin.systemd:
      name: docker
      enabled: yes
      state: started
    tags:
      - install-docker

  - name: Add vagrant to docker group
    user:
      name: vagrant
      groups: docker
      append: yes
    become: yes
    tags:
      - install-docker

  - name: Install base packages
    ansible.builtin.apt:
      pkg: 
        "{{ packages }}"
      state: latest
      update_cache: yes
    tags:
      - install-base-packages

  - name: Install NordVPN
    ansible.builtin.shell: "wget -qO - https://downloads.nordcdn.com/apps/linux/install.sh | sh -s -- -n"
    tags:
      - install-nordvpn

  # since we now use the ansible_local provider, we canot use the reboot
  # module to reboot the host. The following error is thrown:
  # fatal: [pentest]: FAILED! => {"changed": false, "elapsed": 0, "msg": "Running reboot with local connection would reboot the control node.", "rebooted": false}
  - ansible.builtin.debug: msg="Reboot host MANUALLY to apply updates"
    tags:
      - reboot