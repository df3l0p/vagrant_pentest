- hosts: all
  gather_facts: yes
  become: yes
  tasks:

  - name: Gather os specific variables
    include_vars: "{{ item }}" 
    with_first_found:
    - "vars/{{ ansible_distribution_release | lower }}.yml"
    - "vars/{{ ansible_distribution_version | lower }}.yml"
    tags: 
      - set-vars

  - name: Update all packages to the latest version
    apt:
      state: latest
      update_cache: yes
    tags:
      - install-update

  - name: Install base packages
    ansible.builtin.apt:
      pkg: 
        "{{ packages }}"
      state: latest
      update_cache: yes
    tags:
      - install-base-packages

  ## docker
  #########################################
  - name: Install docker
    ansible.builtin.apt:
      pkg:
        - docker.io
      state: latest
      update_cache: yes
    tags:
      - install-docker

  - name: Enable docker on systemd
    ansible.builtin.systemd:
      name: docker
      enabled: yes
      state: started
    tags:
      - install-docker

  - name: Add vagrant to docker group
    user:
      name: vagrant
      groups: docker
      append: yes
    become: yes
    tags:
      - install-docker

  ## Nord VPN
  #########################################
  - name: Install NordVPN
    ansible.builtin.shell: "wget -qO - https://downloads.nordcdn.com/apps/linux/install.sh | sh -"
    tags:
      - install-nordvpn

  ## Burp community
  #########################################
  - name: Download Burp Suite
    ansible.builtin.get_url:
      url: https://portswigger.net/burp/releases/download?product=community&type=linux
      dest: /tmp/burpcommunity.sh
      mode: '0755'
    tags: install-burp

  - name: Install Burp
    # this is to deal with burpcommunity prompt installtion
    #   This will install Burp Suite Community Edition on your computer.
    #   OK [o, Enter], Cancel [c]
    #   Where should Burp Suite Community Edition be installed?
    #   [/home/vagrant/BurpSuiteCommunity]
    #   Create symlinks?
    #   Yes [y, Enter], No [n]
    #   Select the folder where you would like Burp Suite Community Edition to create symlinks, then click Next.
    #   [/usr/local/bin]
    #   Extracting files ...
    #   ...
    ansible.builtin.shell: |
      /tmp/burpcommunity.sh << EOF
      o
      /opt/BurpSuiteCommunity
      y
      /usr/local/bin
      EOF
    tags: install-burp

  ## OleVBA
  #########################################
  - name: Install Olevba tools
    ansible.builtin.shell: python3 -m pip install --upgrade pip oletools
    tags: install-oletools

  ## pdfid, pdf-parser (DidierStensSuite)
  #########################################
  - name: Cloning pdf github tools
    git:
      repo: 'https://github.com/DidierStevens/DidierStevensSuite.git'
      dest: '/opt/DidierStevensSuite'
      force: yes
    tags: install-pdftools

  - name: Adding execution permission to the pdf tools
    file:
      path: "/opt/DidierStevensSuite/{{ item }}"
      mode: '0755'
    loop:
      - pdf-parser.py
      - pdfid.py
    tags: install-pdftools

  - name: Adding pdftools to shell profile
    lineinfile:
      path: '/home/vagrant/.bashrc'
      line: 'export PATH=$PATH:/opt/DidierStevensSuite'
      state: present
    become_user: vagrant
    tags: install-pdftools

  # since we now use the ansible_local provider, we canot use the reboot
  # module to reboot the host. The following error is thrown:
  # fatal: [pentest]: FAILED! => {"changed": false, "elapsed": 0, "msg": "Running reboot with local connection would reboot the control node.", "rebooted": false}
  - ansible.builtin.debug: msg="Reboot host MANUALLY to apply updates"
    tags:
      - reboot
